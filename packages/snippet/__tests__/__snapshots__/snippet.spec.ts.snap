// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should import all lines 1`] = `
"<pre><code class="language-html">&lt;!doctype html&gt;
&lt;html lang=&quot;zh-CN&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot; /&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
    &lt;title&gt;Document&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;!-- region snippet --&gt;
    &lt;p&gt;
      Lorem ipsum dolor, sit amet consectetur adipisicing elit. Eligendi,
      repellendus. Voluptatibus alias cupiditate at, fuga tenetur error officiis
      provident quisquam autem, porro facere! Neque quibusdam animi quaerat
      eligendi recusandae eaque.
    &lt;/p&gt;
    &lt;!-- endregion snippet --&gt;
    &lt;p&gt;
      Veniam harum illum natus omnis necessitatibus numquam architecto eum
      dignissimos, quos a adipisci et non quam maxime repellendus alias ipsum,
      vero praesentium laborum commodi perferendis velit repellat? Vero,
      cupiditate sequi.
    &lt;/p&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
"
`;

exports[`should import all lines 2`] = `
"<pre><code class="language-md">## Hello world

&lt;!-- #region snippet --&gt;

Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptates
inventore iure quo aut doloremque, ipsum ab voluptatem ipsa, velit laborum
illo quae omnis reiciendis hic, ut dolorem non debitis in!

&lt;!-- #endregion snippet --&gt;

Veniam harum illum natus omnis necessitatibus numquam architecto eum
dignissimos, quos a adipisci et non quam maxime repellendus alias ipsum,
vero praesentium laborum commodi perferendis velit repellat? Vero,
cupiditate sequi.
</code></pre>
"
`;

exports[`should import all lines 3`] = `
"<pre><code class="language-js">const { snippet } = require(&quot;@mdit/plugin-snippet&quot;);
const MarkdownIt = require(&quot;markdown-it&quot;);

// #region snippet
const mdIt = MarkdownIt().use(snippet, {
  // your options, currentPath is required
  currentPath: (env) =&gt; env.filePath,
});
// #endregion snippet

mdIt.render(&quot;&lt;&lt;&lt; snippet.js&quot;, {
  filePath: &quot;path/to/current/file.md&quot;,
});
</code></pre>
"
`;

exports[`should import all lines 4`] = `
"<pre><code class="language-ts">import { snippet } from &quot;@mdit/plugin-snippet&quot;;
import MarkdownIt from &quot;markdown-it&quot;;

// #region snippet
const mdIt = MarkdownIt().use(snippet, {
  // your options, currentPath is required
  currentPath: (env) =&gt; env.filePath,
});
// #endregion snippet

mdIt.render(&quot;&lt;&lt;&lt; snippet.ts&quot;, {
  filePath: &quot;path/to/current/file.md&quot;,
});
</code></pre>
"
`;

exports[`should import all lines 5`] = `
"<pre><code class="language-css">html,
body {
  margin: 0;
  padding: 0;
}

/* #region snippet */
h1 {
  font-size: 1.5rem;
}
/* #endregion snippet */

h2 {
  font-size: 1.2rem;
}
</code></pre>
"
`;

exports[`should import all lines 6`] = `
"<pre><code class="language-scss">html,
body {
  margin: 0;
  padding: 0;
}

/* #region snippet */
h1 {
  font-size: 1.5rem;
}

/* #endregion snippet */

h2 {
  font-size: 1.2rem;
}
</code></pre>
"
`;

exports[`should import all lines 7`] = `
"<pre><code class="language-less">html,
body {
  margin: 0;
  padding: 0;
}

/* #region snippet */
h1 {
  font-size: 1.5rem;
}

/* #endregion snippet */

h2 {
  font-size: 1.2rem;
}
</code></pre>
"
`;

exports[`should import all lines 8`] = `
"<pre><code class="language-cs">// #region preface
using System;
// #endregion preface

namespace HelloWorldApp {

    class Geeks {

        // #region snippet
        static void Main(string[] args) {

            // statement
            // printing Hello World!
            Console.WriteLine(&quot;Hello World!&quot;);

            // To prevents the screen from
            // running and closing quickly
            Console.ReadKey();
        }
        // #endregion snippet
    }
}
</code></pre>
"
`;

exports[`should import all lines 9`] = `
"<pre><code class="language-java">public class HelloWorld {
  // #region snippet
  public static void main(String args[]){
    System.out.println(&quot;Hello World&quot;);
  }
  // #endregion snippet
}
</code></pre>
"
`;

exports[`should import all lines 10`] = `
"<pre><code class="language-py">class MyClass:
    msg = &quot;world&quot;

    #region snippet
    def sayHello(self):
        print(&quot;Hello &quot; + self.msg + &quot;!&quot;)
    #region snippet

    def sayBye(self):
        print(&quot;Bye &quot; + self.msg + &quot;!&quot;)
</code></pre>
"
`;

exports[`should import all lines 11`] = `
"<pre><code class="language-vb">Imports System

Module Module1
   # Region snippet
   Sub Main()
     Console.WriteLine(&quot;Hello World!&quot;)
     Console.WriteLine(&quot;Press Enter Key to Exit.&quot;)
     Console.ReadLine()
   End Sub
   # EndRegion
End Module
</code></pre>
"
`;

exports[`should not be parsed as snippet markdown syntax 1`] = `
"<blockquote>
<blockquote>
<blockquote></blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>&lt;&gt; test</p>
</blockquote>
<p>&lt;&gt;&lt; test</p>
<p>&lt;&lt; test</p>
"
`;

exports[`should not parse code block 1`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md#snippet{1-3}
</code></pre>
"
`;

exports[`should not parse code block 2`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md
</code></pre>
"
`;

exports[`should not parse code block 3`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md#snippet
</code></pre>
"
`;

exports[`should not parse code block 4`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md{1-3}
</code></pre>
"
`;

exports[`should not parse code block 5`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md#snippet{1-3}
</code></pre>
"
`;

exports[`should not parse code block 6`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md
</code></pre>
"
`;

exports[`should not parse code block 7`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md#snippet
</code></pre>
"
`;

exports[`should not parse code block 8`] = `
"<pre><code>&lt;&lt;&lt; not-exisit.md{1-3}
</code></pre>
"
`;

exports[`should support region 1`] = `
"<pre><code class="language-html"></code></pre>
"
`;

exports[`should support region 2`] = `
"<pre><code class="language-md"></code></pre>
"
`;

exports[`should support region 3`] = `
"<pre><code class="language-js"></code></pre>
"
`;

exports[`should support region 4`] = `
"<pre><code class="language-ts"></code></pre>
"
`;

exports[`should support region 5`] = `
"<pre><code class="language-css"></code></pre>
"
`;

exports[`should support region 6`] = `
"<pre><code class="language-scss"></code></pre>
"
`;

exports[`should support region 7`] = `
"<pre><code class="language-less"></code></pre>
"
`;

exports[`should support region 8`] = `
"<pre><code class="language-cs"></code></pre>
"
`;

exports[`should support region 9`] = `
"<pre><code class="language-java"></code></pre>
"
`;

exports[`should support region 10`] = `
"<pre><code class="language-py">class MyClass:
    msg = &quot;world&quot;

    #region snippet
    def sayHello(self):
        print(&quot;Hello &quot; + self.msg + &quot;!&quot;)
    #region snippet

    def sayBye(self):
        print(&quot;Bye &quot; + self.msg + &quot;!&quot;)
</code></pre>
"
`;

exports[`should support region 11`] = `
"<pre><code class="language-vb">Imports System

Module Module1
   # Region snippet
   Sub Main()
     Console.WriteLine(&quot;Hello World!&quot;)
     Console.WriteLine(&quot;Press Enter Key to Exit.&quot;)
     Console.ReadLine()
   End Sub
   # EndRegion
End Module
</code></pre>
"
`;
